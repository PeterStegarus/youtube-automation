name: Upload
on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Scrape"]
    types:
      - completed
concurrency: 1
jobs:
  upload:
    name: Upload
    runs-on: ubuntu-latest
    env:
      CREDENTIALS: ${{ secrets.CREDENTIALS }}
      PUPPETEER_OPTIONS: '{ "headless": true }'
    steps:
      - uses: actions/checkout@main
      - uses: actions/setup-node@main
        with:
          node-version: 16
          cache: 'npm'
      - run: npm ci
      - name: Download yt-auth from previous run
        id: prev-yt-auth
        continue-on-error: true
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: upload.yml
          name: yt-auth
          path: yt-auth
      - name: Download fallback yt-auth
        if: steps.prev-yt-auth.outcome != 'success'
        run: curl -L '${{ secrets.FALLBACK_YTAUTH }}' -o yt-auth.zip && ls yt-auth.zip && unzip yt-auth.zip -d yt-auth
      - name: Download videos.json
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: scrape.yml
          name: videos.json
          path: .
      - name: Download videos
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: scrape.yml
          name: scraped-videos
          path: videos
      - name: Run upload.js
        run: npm run upload
      - name: Upload videos.json
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: videos.json
          path: videos.json
      - name: Upload videos/*
        uses: actions/upload-artifact@v3
        with:
          name: scraped-videos
          path: videos/*
      - name: Upload sss/*
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: sss
          path: sss/*
      - name: Upload yt-auth
        uses: actions/upload-artifact@v3
        with:
          name: yt-auth
          path: yt-auth/*